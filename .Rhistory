knitr::opts_chunk$set(echo <- TRUE)
packages = c('tidyverse','leaflet', 'knitr','stringr')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
list.files("data/")
routes <- read_csv("data/routes.txt",trim_ws <- T)
stops <- read_csv("data/stops.txt",trim_ws <- T)
trips <- read_csv("data/trips.txt",trim_ws <- T)
transfers <- read_csv("data/transfers.txt",trim_ws <- T)
list.files("./data/")
routes <- read_csv("data/routes.txt",trim_ws <- T)
stops <- read_csv("data/stops.txt",trim_ws <- T)
trips <- read_csv("data/trips.txt",trim_ws <- T)
transfers <- read_csv("data/transfers.txt",trim_ws <- T)
agency <- read_csv("data/agency.txt",trim_ws <- T)
stoptime <- read_csv("data/stop_times.txt",trim_ws <- T)
kable(head(stops))
m = leaflet() %>%
# Add CartoDB background map
addProviderTiles("CartoDB.DarkMatter") %>%
# Add a marker for each stop
addCircleMarkers(lng= ~ stop_lon, lat= ~stop_lat, data = head(stops,10000),
stroke = FALSE, fillOpacity = 0.5, radius =5 )
m  # Show the map
knitr::opts_chunk$set(echo <- TRUE)
packages = c('tidyverse','leaflet', 'knitr','stringr')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
list.files("./data/")
routes <- read.csv("data/routes.txt",trim_ws <- T)
stops <- read.csv("data/stops.txt",trim_ws <- T)
trips <- read.csv("data/trips.txt",trim_ws <- T)
# transfers <- read_csv("data/transfers.txt",trim_ws <- T)
agency <- read.csv("data/agency.txt",trim_ws <- T)
stoptime <- read.csv("data/stop_times.txt",trim_ws <- T)
kable(head(stops))
m = leaflet() %>%
# Add CartoDB background map
addProviderTiles("CartoDB.DarkMatter") %>%
# Add a marker for each stop
addCircleMarkers(lng= ~ stop_lon, lat= ~stop_lat, data = head(stops,10000),
stroke = FALSE, fillOpacity = 0.5, radius =5 )
m  # Show the map
berlin_modes = data.frame(agency_id = c("BVB---", "BVF---", "BVT---" ,"BVU---", "DBS---", "SEV---"), mot = c("Bus", "Ferry", "Tram", "Subway", "Light Rail", "Replacement"))
berlin$agency_id = factor(berlin$agency_id)
knitr::opts_chunk$set(echo <- TRUE)
packages = c('tidyverse','leaflet', 'knitr','stringr','httr','geojsonio')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
list.files("./data/")
get_geojson<-function(lat,lng,filename){
current <- GET(
"http://localhost:8080/otp/routers/current/isochrone",
query = list(
fromPlace = paste(lat,lng,sep = ","), # latlong of place
mode = "WALK,TRANSIT", # modes we want the route planner to use
date = "07-10-2018",
time= "08:00am",
maxWalkDistance = 1600, # in metres
walkReluctance = 5,
minTransferTime = 60, # in secs
cutoffSec = 900,
cutoffSec = 1800,
cutoffSec = 2700,
cutoffSec = 3600
)
)
current <- content(current, as = "text", encoding = "UTF-8")
write(current, file = paste("./data/",filename,".geojson" , sep = ""))
}
get_geojson(1.36173580440684,103.990348825503,
"Changi-Terminal-1")
get_geojson(1.36173580440684,103.990348825503,
"Changi-Terminal-1")
get_geojson<-function(lat,lng,filename){
current <- GET(
"http://localhost:8080/otp/routers/current/isochrone",
query = list(
fromPlace = paste(lat,lng,sep = ","), # latlong of place
mode = "WALK,TRANSIT", # modes we want the route planner to use
date = "07-10-2018",
time= "08:00am",
maxWalkDistance = 1600, # in metres
walkReluctance = 5,
minTransferTime = 60, # in secs
cutoffSec = 900,
cutoffSec = 1800,
cutoffSec = 2700,
cutoffSec = 3600
)
)
current <- content(current, as = "text", encoding = "UTF-8")
write(current, file = paste("./data/",filename,".geojson" , sep = ""))
}
get_geojson(1.36173580440684,103.990348825503,
"Changi-Terminal-1")
iso <- geojsonio::geojson_read("./data/SMU.geojson",
what = "sp")
iso <- geojsonio::geojson_read("./data/SMU.geojson",
what = "sp")
pal=c('cyan','gold','tomato','red')
m<-leaflet(iso) %>%
setView(lng = 103.8198, lat = 1.3521, zoom = 11) %>%
addProviderTiles(providers$CartoDB.DarkMatter,
options = providerTileOptions(opacity = 0.8))%>%
addPolygons(stroke = TRUE, weight=0.5,
smoothFactor = 0.3, color="black",
fillOpacity = 0.1,fillColor =pal ) %>%
addLegend(position="bottomleft",colors=rev(c("lightskyblue","greenyellow","gold","tomato")),
labels=rev(c("60 min","45 min",
"30 min","15 min")),
opacity = 0.6,
title="Travel Time with Public Transport")
m  # Show the map
